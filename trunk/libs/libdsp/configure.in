AC_PREREQ(2.59)

# libdsp interface version (libtool shared library versioning)
#
# current = incremented whenever the public slv2 API is changed
# revision = incremented when the slv2 implementation is changed
# age = current library is both source and binary compatible with
#       interfaces current,current-1,...,current-age
#
# See libtool documentation for detailed documentation
DSP_API_CURRENT=0
DSL_API_REVISION=1
DSP_API_AGE=0
DSP_SO_VERSION=${DSP_API_CURRENT}:${DSP_API_REVISION}:${DSP_API_AGE}

AC_INIT([dsp],[0.0.1],[elthariel@gmail.com])
AC_CONFIG_SRCDIR([src/iOsc.cc])
AC_CONFIG_SRCDIR([dsp/iOsc.hh])
AM_INIT_AUTOMAKE(libdsp, 0.0.1)

AC_SUBST(DSP_SO_VERSION)

AM_PROG_LIBTOOL

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CXXCPP
AC_PROG_CXX
AC_PROG_MAKE_SET

AM_PROG_CC_STDC

AC_PROG_INSTALL

dnl We need to write some rules to check stl classes.
dnl    pthreads, libxml++ (or embbed it into src tree)

AC_CHECK_HEADERS([pthread.h, semaphore.h])
AC_CHECK_HEADERS([iostream, vector, list])

#PKG_CHECK_MODULES(SIGC, sigc++-2.0)
#AC_SUBST(SIGC_CFLAGS)
#AC_SUBST(SIGC_LIBS)

dnl libxml++ checks
#PKG_CHECK_MODULES(LIBXML, libxml++-2.6 >= 2.10.0)
#AC_SUBST(LIBXML_CFLAGS)
#AC_SUBST(LIBXML_LIBS)

# Check for debugging flag
debug="no"
AC_ARG_ENABLE(debug,
	[AS_HELP_STRING(--enable-debug, [Enable debugging (false)])],
	[debug="$enableval"])
if test "$debug" = "yes"; then
  CFLAGS="-O0 -g -DDEBUG"
  CXXFLAGS="-O0 -g -DDEBUG"
else
  CFLAGS="$CFLAGS -DNDEBUG"
  CXXFLAGS="$CFLAGS -DNDEBUG"
fi

AC_OUTPUT([
Makefile
src/Makefile
dsp/Makefile
])
